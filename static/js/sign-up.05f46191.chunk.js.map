{"version":3,"sources":["components/ErrorValidation/ErrorValidation.module.css","components/SignUp/SignUp.module.css","components/ErrorValidation/ErrorValidation.js","components/SignUp/SignUp.js"],"names":["module","exports","primaryColor","centerDirection","paragraph3","errorText","headingMobile","headingTablet","headingDesktop","paragraph1","paragraph2","secondaryColor","hoverPrimaryColor","inputColor","focusValidColor","focusValidColorShadow","focusInvalidColorShadow","marginForComponents","transitionDuration","whiteText","blackText","backgroundColor3","registerFormWrapper","registerFormTitle","registerFormContent","registerFormText","registrationForm","label","labelTitle","labelPhoneTitle","inputSection","inputSectionValid","inputSectionInvalid","inputNumberSection","inputNumberSectionValid","inputNumberSectionInvalid","inputNumberFormat","positionsSection","selectLabelTitle","labelContainer","radioLabel","inputRadioLabel","radioLabelTitle","photoLabelTitle","photoInput","labelPhotoInput","labelPhotoInputValid","labelPhotoInputInvalid","leftLabelPhotoInputBlack","leftLabelPhotoInputGrey","rightLabelPhotoInput","signUpButton","firstClonePhotoInputBlack","secondClonePhotoInput","ErrorValidation","_ref","text","react_default","a","createElement","className","styles","rules","name","email","phone","position","photo","messages","name.required","name.min","email.required","email.email","phone.required","phone.number","position.required","photo.required","SignUp","state","positions","token","isLoading","error","errors","handleChange","e","_e$target","target","value","_this","setState","Object","defineProperty","handleSubmit","preventDefault","_this$state","onSubmit","props","validateAll","then","formData","FormData","fileField","document","querySelector","append","files","fetch","method","body","headers","Token","response","json","data","success","formattedErrors","doubleUser","message","reset","catch","err","forEach","field","finally","_this2","this","API","val","num","_this3","_this$state2","Loader","ErrorNotification","components_ErrorValidation_ErrorValidation","encType","type","onChange","placeholder","map","key","id","checked","photoSection","data-multiple-caption","multiple","htmlFor","slice","String","length","concat","Component"],"mappings":"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","file":"static/js/sign-up.05f46191.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#ef5b4c\",\"centerDirection\":\"0 auto\",\"paragraph3\":\"12px\",\"errorText\":\"ErrorValidation_errorText__AgGNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headingMobile\":\"30px\",\"headingTablet\":\"40px\",\"headingDesktop\":\"50px\",\"paragraph1\":\"16px\",\"paragraph2\":\"14px\",\"paragraph3\":\"12px\",\"primaryColor\":\"#ef5b4c\",\"secondaryColor\":\"#007bff\",\"hoverPrimaryColor\":\"#c94031\",\"inputColor\":\"#cecece\",\"focusValidColor\":\"#64aefd\",\"focusValidColorShadow\":\"rgba(173, 222, 255, 0.5)\",\"focusInvalidColorShadow\":\"rgba(253, 171, 194, 0.5)\",\"marginForComponents\":\"40px\",\"transitionDuration\":\"400ms\",\"centerDirection\":\"0 auto\",\"whiteText\":\"#fff\",\"blackText\":\"#000\",\"backgroundColor3\":\"rgb(238, 237, 230)\",\"registerFormWrapper\":\"SignUp_registerFormWrapper__1JKSg\",\"registerFormTitle\":\"SignUp_registerFormTitle__31ezH\",\"registerFormContent\":\"SignUp_registerFormContent__zq8iA\",\"registerFormText\":\"SignUp_registerFormText__1x9rY\",\"registrationForm\":\"SignUp_registrationForm__3xTFS\",\"label\":\"SignUp_label__uhRfY\",\"labelTitle\":\"SignUp_labelTitle__2sZ1i\",\"labelPhoneTitle\":\"SignUp_labelPhoneTitle__2-XgF\",\"inputSection\":\"SignUp_inputSection__1IGI6\",\"inputSectionValid\":\"SignUp_inputSectionValid__3tIth SignUp_inputSection__1IGI6\",\"inputSectionInvalid\":\"SignUp_inputSectionInvalid__33dZa SignUp_inputSection__1IGI6\",\"inputNumberSection\":\"SignUp_inputNumberSection__sbTtV SignUp_inputSection__1IGI6\",\"inputNumberSectionValid\":\"SignUp_inputNumberSectionValid__EJkOi SignUp_inputNumberSection__sbTtV SignUp_inputSection__1IGI6\",\"inputNumberSectionInvalid\":\"SignUp_inputNumberSectionInvalid__ZoQSR SignUp_inputNumberSection__sbTtV SignUp_inputSection__1IGI6\",\"inputNumberFormat\":\"SignUp_inputNumberFormat__3bSBD\",\"positionsSection\":\"SignUp_positionsSection__3jMgg\",\"selectLabelTitle\":\"SignUp_selectLabelTitle__ZjigN\",\"labelContainer\":\"SignUp_labelContainer__2ei8m\",\"radioLabel\":\"SignUp_radioLabel__3hgyK\",\"inputRadioLabel\":\"SignUp_inputRadioLabel__1RKuD\",\"radioLabelTitle\":\"SignUp_radioLabelTitle__1XH9y\",\"photoLabelTitle\":\"SignUp_photoLabelTitle__DKeOn\",\"photoInput\":\"SignUp_photoInput__2N6PG\",\"labelPhotoInput\":\"SignUp_labelPhotoInput__3DQy9\",\"labelPhotoInputValid\":\"SignUp_labelPhotoInputValid__1YW61 SignUp_labelPhotoInput__3DQy9\",\"labelPhotoInputInvalid\":\"SignUp_labelPhotoInputInvalid__11yzA SignUp_labelPhotoInput__3DQy9\",\"leftLabelPhotoInputBlack\":\"SignUp_leftLabelPhotoInputBlack__2WMex\",\"leftLabelPhotoInputGrey\":\"SignUp_leftLabelPhotoInputGrey__1chHF SignUp_leftLabelPhotoInputBlack__2WMex\",\"rightLabelPhotoInput\":\"SignUp_rightLabelPhotoInput__2Omel\",\"signUpButton\":\"SignUp_signUpButton__rfrMV\",\"firstClonePhotoInputBlack\":\"SignUp_firstClonePhotoInputBlack__1ndSM\",\"secondClonePhotoInput\":\"SignUp_secondClonePhotoInput__1_Izz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ErrorValidation.module.css';\n\nconst ErrorValidation = ({ text }) => (\n  <div>\n    <p className={styles.errorText}>{text}</p>\n  </div>\n);\n\nErrorValidation.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default ErrorValidation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { validateAll } from 'indicative/validator';\nimport * as API from '../../services/article-api';\nimport Loader from '../Loader/Loader';\nimport ErrorNotification from '../ErrorNotification/ErrorNotification';\nimport ErrorValidation from '../ErrorValidation/ErrorValidation';\nimport styles from './SignUp.module.css';\n\nconst rules = {\n  name: 'required|string|min:3',\n  email: 'required|email',\n  phone: 'required|number',\n  position: 'required',\n  photo: 'required',\n};\n\nconst messages = {\n  'name.required': 'Please choose a unique username for your account',\n  'name.min': 'Your name is too short',\n  'email.required': 'Enter a valid email address',\n  'email.email': 'Email is invalid',\n  'phone.required': 'Enter a valid phone number',\n  'phone.number': 'Please write down only the numbers',\n  'position.required': 'Please choose your position',\n  'photo.required': 'Please upload your photo',\n};\n\nconst cutName = (val, num) => {\n  const valToString = String(val);\n  if (valToString.length > num) {\n    return val.slice(0, num).concat('...');\n  }\n  return val;\n};\n\nexport default class SignUp extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    email: '',\n    phone: null,\n    position: '',\n    photo: null,\n    positions: [],\n    token: '',\n    isLoading: false,\n    error: null,\n    errors: null,\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    API.fetchToken()\n      .then(data => this.setState({ token: data.data.token }))\n      .catch(error => this.setState({ error }));\n    API.fetchPosition()\n      .then(data => this.setState({ positions: data.data.positions }))\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n    const { name, email, phone, position, photo, token } = this.state;\n    const { onSubmit } = this.props;\n    validateAll({ name, email, phone, position, photo }, rules, messages)\n      .then(() => {\n        const formData = new FormData();\n        const fileField = document.querySelector('input[type=\"file\"]');\n        formData.append('position_id', 2);\n        formData.append('name', name);\n        formData.append('email', email);\n        formData.append('phone', phone);\n        formData.append('photo', fileField.files[0]);\n\n        fetch('https://frontend-test-assignment-api.abz.agency/api/v1/users', {\n          method: 'POST',\n          body: formData,\n          headers: {\n            Token: token,\n          },\n        })\n          .then(response => response.json())\n          .then(data => {\n            if (data.success === false) {\n              const formattedErrors = {};\n              formattedErrors.doubleUser = data.message;\n              this.setState({ errors: formattedErrors });\n            } else {\n              onSubmit();\n              this.reset();\n            }\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(err => {\n        const formattedErrors = {};\n        err.forEach(error => {\n          formattedErrors[error.field] = error.message;\n        });\n        this.setState({ errors: formattedErrors });\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      email: '',\n      phone: null,\n      position: '',\n      photo: null,\n      errors: null,\n    });\n  };\n\n  render() {\n    const {\n      name,\n      email,\n      phone,\n      position,\n      photo,\n      positions,\n      isLoading,\n      error,\n      errors,\n    } = this.state;\n    // console.log(this.state);\n\n    return (\n      <div>\n        {isLoading && <Loader />}\n        <div className={styles.registerFormWrapper}>\n          <h2 className={styles.registerFormTitle}>Register to get a work</h2>\n          <div className={styles.registerFormContent}>\n            <p className={styles.registerFormText}>\n              Attention! After successful registration and alert, update the\n              list of users in the block from the top\n            </p>\n            {error && <ErrorNotification text={error.message} />}\n            {errors && <ErrorValidation text={errors.doubleUser} />}\n            <form\n              onSubmit={this.handleSubmit}\n              encType=\"multipart/form-data\"\n              method=\"post\"\n              className={styles.registrationForm}\n            >\n              <section className={styles.labelContainer}>\n                <label className={styles.label}>\n                  <p className={styles.labelTitle}>Name</p>\n                  <input\n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChange}\n                    name=\"name\"\n                    placeholder=\"Your name\"\n                    className={\n                      errors && !!errors.name\n                        ? styles.inputSectionInvalid\n                        : styles.inputSectionValid\n                    }\n                  />\n                  {errors && <ErrorValidation text={errors.name} />}\n                </label>\n                <label className={styles.label}>\n                  <p className={styles.labelTitle}>Email</p>\n                  <input\n                    type=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    placeholder=\"Your email\"\n                    className={\n                      errors && !!errors.email\n                        ? styles.inputSectionInvalid\n                        : styles.inputSectionValid\n                    }\n                  />\n                  {errors && <ErrorValidation text={errors.email} />}\n                </label>\n                <label className={styles.label}>\n                  <p className={styles.labelPhoneTitle}>Phone number</p>\n                  <input\n                    type=\"tel\"\n                    value={phone}\n                    onChange={this.handleChange}\n                    name=\"phone\"\n                    placeholder=\"+380 XX  XXX  XX XX\"\n                    className={\n                      errors && !!errors.phone\n                        ? styles.inputNumberSectionInvalid\n                        : styles.inputNumberSectionValid\n                    }\n                  />\n                  <p className={styles.inputNumberFormat}>\n                    Enter phone number in open format\n                  </p>\n                  {errors && <ErrorValidation text={errors.phone} />}\n                </label>\n              </section>\n              <section className={styles.positionsSection}>\n                <p className={styles.selectLabelTitle}>Select your position</p>\n                <div className={styles.labelContainer}>\n                  {positions.map(val => {\n                    return (\n                      <label className={styles.radioLabel} key={val.id}>\n                        <input\n                          type=\"radio\"\n                          checked={position === val.name}\n                          name=\"position\"\n                          value={val.name}\n                          onChange={this.handleChange}\n                          className={styles.inputRadioLabel}\n                        />\n                        <span className={styles.radioLabelTitle}>\n                          {val.name}\n                        </span>\n                      </label>\n                    );\n                  })}\n                </div>\n                {errors && <ErrorValidation text={errors.position} />}\n              </section>\n              <section className={styles.photoSection}>\n                <p className={styles.photoLabelTitle}>Photo</p>\n                <input\n                  id=\"file\"\n                  type=\"file\"\n                  value={photo}\n                  onChange={this.handleChange}\n                  name=\"photo\"\n                  className={styles.photoInput}\n                  data-multiple-caption=\"{count} files selected\"\n                  multiple\n                />\n                <label\n                  htmlFor=\"file\"\n                  className={\n                    errors && !!errors.photo\n                      ? styles.labelPhotoInputInvalid\n                      : styles.labelPhotoInputValid\n                  }\n                >\n                  <div\n                    className={\n                      photo\n                        ? styles.leftLabelPhotoInputBlack\n                        : styles.leftLabelPhotoInputGrey\n                    }\n                  >\n                    {photo ? cutName(photo.slice(12), 25) : 'Upload your photo'}\n                  </div>\n                  <div className={styles.rightLabelPhotoInput}>Browse</div>\n                </label>\n                {errors && <ErrorValidation text={errors.photo} />}\n              </section>\n              <button type=\"submit\" className={styles.signUpButton}>\n                Sign up now\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}